name: Build

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
          ubuntu-20.04,
          macos-latest,
          windows-2022
        ]
      fail-fast: false
    name: ${{ matrix.os }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Install java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.0.1+12'

      - name: Echo JAVA_HOME
        run: echo $JAVA_HOME
      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Install create-dmg for macOS
        run: ${{ !startsWith(matrix.os, 'mac') }} || brew install create-dmg
        shell: bash

      - name: Execute dist build
        run: ./gradle/gradlew --info createDist

      - name: JReleaser Release
        run: ./gradle/gradlew jreleaserRelease --stacktrace "-Dorg.gradle.jvmargs=-Xmx2048M"
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.JRELEASER_GITHUB_TOKEN }}
          JRELEASER_DISCORD_WEBHOOK: ${{ secrets.JRELEASER_DISCORD_WEBHOOK }}
        if: ${{ github.ref == 'refs/heads/master' }}

      - name: JReleaser Announce
        run: ./gradle/gradlew jreleaserAnnounce
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.JRELEASER_GITHUB_TOKEN }}
          JRELEASER_DISCORD_WEBHOOK: ${{ secrets.JRELEASER_DISCORD_WEBHOOK }}
        if: ${{ matrix.os == 'windows-2022' && github.ref == 'refs/heads/master' }}

      - name: Upload mac dist as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: pdx_unlimiter-mac-dev
          path: build/pdx_unlimiter-mac_intel.dmg
          if-no-files-found: ignore

      - name: Upload Windows dist as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: pdx_unlimiter-windows-dev
          path: build/pdx_unlimiter-windows.zip
          if-no-files-found: ignore

      - name: Upload Linux dist as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: pdx_unlimiter-linux-dev
          path: build/pdx_unlimiter-linux.zip
          if-no-files-found: ignore
